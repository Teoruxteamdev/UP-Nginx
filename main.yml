name: CI/CD Pipeline

on: 
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Check Docker and Docker Compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          # Проверяем доступ к Docker
          if ! docker --version &>/dev/null; then
            echo "ERROR: Deploy user cannot access Docker"
            echo "Please ensure:"
            echo "1. Docker is installed on the server"
            echo "2. Deploy user is added to docker group: sudo usermod -aG docker deploy"
            echo "3. Docker service is running: sudo systemctl start docker"
            exit 1
          fi
          
          if ! docker-compose --version &>/dev/null; then
            echo "ERROR: Deploy user cannot access Docker Compose"
            echo "Please ensure Docker Compose is installed and accessible"
            exit 1
          fi
          
          echo "✅ Docker access verified for deploy user"
          echo "Docker version: $(docker --version)"
          echo "Docker Compose version: $(docker-compose --version)"

    - name: Deploy application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd /opt/soultips
          
          echo "Current working directory: $(pwd)"
          echo "User: $(whoami)"
          echo "Groups: $(groups)"
          
          # Настраиваем Git для неинтерактивного режима
          git config --global credential.helper store
          git config --global user.email "deploy@soultips.com"
          git config --global user.name "Deploy Bot"
          
          # Проверяем, что токен установлен
          if [ -z "${{ secrets.GPAT }}" ]; then
            echo "ERROR: GPAT secret is not set!"
            exit 1
          fi
          
          # Создаем файл с учетными данными в правильном формате
          echo "https://${{ secrets.GPAT }}:x-oauth-basic@github.com" > ~/.git-credentials
          
          if [ -d "nginx/.git" ]; then
            echo "Repository exists, pulling latest changes..."
            cd nginx
            
            # Устанавливаем remote URL с токеном
            git remote set-url origin https://${{ secrets.GPAT }}:x-oauth-basic@github.com/Teoruxteamdev/SoulTips-Nginx.git
            
            git fetch origin
            git reset --hard origin/main
          else
            echo "Cloning repository..."
            
            if git clone https://${{ secrets.GPAT }}:x-oauth-basic@github.com/Teoruxteamdev/SoulTips-Nginx.git nginx; then
              echo "Clone successful"
            else
              echo "Clone failed"
              exit 1
            fi
            
            cd nginx
          fi
          
          # Проверяем существование файлов
          if [ -f "deploy.sh" ]; then
            chmod +x deploy.sh
            echo "deploy.sh found and made executable"
          else
            echo "Error: deploy.sh not found"
            ls -la
            exit 1
          fi
          
          if [ -f "init-letsencrypt.sh" ]; then
            chmod +x init-letsencrypt.sh
            echo "init-letsencrypt.sh found and made executable"
          else
            echo "Warning: init-letsencrypt.sh not found"
          fi

          # Запускаем deploy.sh
          echo "Starting deployment..."
          export GITHUB_ACTIONS=true
          export CI=true
          ./deploy.sh
