
upstream soultips_backend {
    server soultips_backend:8000 max_fails=0 fail_timeout=10s;
    # Если основной сервер недоступен, nginx будет продолжать попытки
}

upstream soultips_frontend {
    server soultips_frontend:3000 max_fails=0 fail_timeout=10s;
    keepalive 64;
    keepalive_requests 1000;
    keepalive_timeout 60s;
    # max_fails=0 означает, что nginx никогда не будет помечать сервер как недоступный
}

upstream soultips_frontend_admin {
    server soultips_frontend_admin:3005 max_fails=0 fail_timeout=10s;
    keepalive 64;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

# Resolver для Docker DNS
resolver 127.0.0.11 valid=30s ipv6=off;

server {
    listen 80;
    server_name soultipsdev.ru www.soultipsdev.ru api.soultipsdev.ru www.api.soultipsdev.ru;
    
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name soultipsdev.ru www.soultipsdev.ru;
    
    ssl_certificate /etc/letsencrypt/live/soultipsdev.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/soultipsdev.ru/privkey.pem;
    
    # Оптимизированные SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;
    
    # OCSP stapling отключен для совместимости
    ssl_stapling off;
    ssl_stapling_verify off;
    
    
    # Админка - все запросы к /admin направляются на front-admin
    location ^~ /admin {
        # Логирование для админки
        access_log /var/log/nginx/admin.log debug;
        add_header X-Debug-Location "admin" always;
        add_header X-Debug-URI "$request_uri" always;
        add_header X-Debug-Upstream "soultips_frontend_admin" always;
        
        proxy_pass http://soultips_frontend_admin;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Настройки для корректной передачи куки
        proxy_set_header Cookie $http_cookie;
        proxy_pass_header Set-Cookie;
        
        # Таймауты и буферизация
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        proxy_temp_file_write_size 8k;
        
        # Обработка недоступности сервиса
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_timeout 0;
        proxy_next_upstream_tries 1;
        
        # Поддержка WebSocket для Next.js HMR
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
    }
    
    # Все остальные запросы к основному Next.js приложению
    location ^~ / {
        # Логирование для основного фронтенда
        access_log /var/log/nginx/frontend.log debug;
        add_header X-Debug-Location "frontend" always;
        add_header X-Debug-URI "$request_uri" always;
        
        proxy_pass http://soultips_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Настройки для корректной передачи куки
        proxy_set_header Cookie $http_cookie;
        proxy_pass_header Set-Cookie;
        
        # Таймауты и буферизация
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        proxy_temp_file_write_size 8k;
        
        # Обработка недоступности сервиса
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_timeout 0;
        proxy_next_upstream_tries 1;
        
        # Поддержка WebSocket для Next.js HMR
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
    }
    # Nginx будет возвращать стандартные ошибки и продолжать попытки подключения
}

server {
    listen 443 ssl;
    http2 on;
    server_name api.soultipsdev.ru;
    
    ssl_certificate /etc/letsencrypt/live/api.soultipsdev.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.soultipsdev.ru/privkey.pem;
    
    # Оптимизированные SSL настройки с улучшенной совместимостью
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;
    
    # OCSP stapling отключен для совместимости
    ssl_stapling off;
    ssl_stapling_verify off;



    
    # Serve media files directly
    location /media/ {
        alias /app/media/;
        autoindex on;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Оптимизация для медиа файлов
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        
        # Поддержка byte-range requests
        add_header Accept-Ranges bytes;
    }
    
    # Все остальные запросы к бэкенду
    location / {
        proxy_pass http://soultips_backend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Настройки для корректной передачи куки
        proxy_set_header Cookie $http_cookie;
        proxy_pass_header Set-Cookie;
        
        # Разрешаем загрузку ресурсов для Swagger UI
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; font-src 'self' https://cdn.jsdelivr.net; img-src 'self' data: https:;" always;
        
        # Таймауты для API
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Буферизация для API
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Обработка недоступности сервиса
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_timeout 0;
        proxy_next_upstream_tries 1;
        
        # Rate limiting (опционально)
        # limit_req zone=api burst=20 nodelay;
    }

    # Nginx будет возвращать стандартные ошибки и продолжать попытки подключения
}

server {
    listen 443 ssl;
    http2 on;
    server_name www.api.soultipsdev.ru;
    
    ssl_certificate /etc/letsencrypt/live/api.soultipsdev.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.soultipsdev.ru/privkey.pem;
    
    return 301 https://api.soultipsdev.ru$request_uri;
} 